City centers:
Amsterdam: 52.3676, 4.9041
Barcelona: 41.3874, 2.1686
Berlin: 52.5200, 13.4050
London: 51.5072, 0.1276
Paris: 48.8566, 2.3522
Rome: 41.9028, 12.4964

Amsterdam bounds:
Min Lat - 52.29034
Max Lat - 52.42512
Min Long - 4.75571
Max Long - 5.02643

Barcelona bounds: 
Min Lat - 41.352608
Max Lat - 41.45956
Min Long - 2.09159
Max Long - 2.22771

Berlin bounds: 
Min Lat - 52.36904
Max Lat - 52.65611
Min Long - 13.09808
Max Long - 13.72139

London bounds: 
Min Lat - 51.295937
Max Lat - 51.6811419
Min Long - -0.4978
Max Long - 0.28857

Paris Bounds:
Min Lat - 48.81608
Max Lat - 48.90167
Min Long - 2.22843
Max Long - 2.46712

Rome Bounds
Min Lat - 41.65701
Max Lat - 42.1216
Min Long - 12.25167
Max Long - 12.79247

(missing key)

// map for airbnb selection
<script>
  function initMap() {
    var bounds = new google.maps.LatLngBounds(
      new google.maps.LatLng(52.29034 - 0.001, 4.75571 - 0.001), 
      new google.maps.LatLng(52.42512 + 0.001, 5.02643 + 0.001)
    );

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 14,
      center: {lat: 52.3676, lng: 4.9041},
      draggable: true,
      restriction: {
        latLngBounds: bounds,
        strictBounds: false
      }
    });

    map.setOptions({ minZoom: 12, maxZoom: 20 });
    map.addListener('click', function(event) {
      var lat = event.latLng.lat();
      var lng = event.latLng.lng();
    });
  }

</script>
<div id="map" style="height: 500px;"></div>
<script>
  window.onload = function() {
    initMap();
  };
</script>

// map for specific airbnb (with nearby restaurants and nightlife)
<script>
 
    // right now this is hardcoded but will be result of query
    const restaurants = [
   { name: "Restaurant A", lat: 52.3640, lng: 4.9011 },
   { name: "Restaurant B", lat: 52.3650, lng: 4.9022 },
   { name: "Restaurant C", lat: 52.3680, lng: 4.9051 }
 ];
   
   const nightlife = [
   { name: "Nightlife A", lat: 52.3640, lng: 4.8990 },
   { name: "Nightlife B", lat: 52.3600, lng: 4.9010 },
   { name: "Nightlife C", lat: 52.3740, lng: 4.9080 }
 ];
   
   const airbnb = { lat: 52.3670, 
                   lng: 4.9018};
 
 function initMap() {
    var bounds = new google.maps.LatLngBounds(
       new google.maps.LatLng(52.29034 - 0.001, 4.75571 - 0.001),
       new google.maps.LatLng(52.42512 + 0.001, 5.02643 + 0.001)
     );
       var map = new google.maps.Map(document.getElementById('map'), {
       zoom: 14,
       center: {lat: 52.3676, lng: 4.9041},
       draggable: true,
       restriction: {
         latLngBounds: bounds,
         strictBounds: false
       }
     });
   map.setOptions({ minZoom: 12, maxZoom: 20 });
 
   // add airbnb marker
   var airbnbMarker = new google.maps.Marker({
     position: new google.maps.LatLng(airbnb.lat, airbnb.lng),
     map: map,
       icon: {url: "https://maps.gstatic.com/mapfiles/place_api/icons/lodging-71.png",
       scaledSize: new google.maps.Size(35, 35),
    
    },
   });
   
   
   // loop through the restaurants and add markers to the map
   for (var i = 0; i < restaurants.length; i++) {
     var restaurant = restaurants[i];
     var marker = new google.maps.Marker({
       position: new google.maps.LatLng(restaurant.lat, restaurant.lng),
       map: map,
       icon: "https://maps.google.com/mapfiles/ms/icons/restaurant.png", 
       title: restaurant.name,
     });
         marker.addListener('click', function() {
       var infowindow = new google.maps.InfoWindow({
         content: this.getTitle()
       });
       infowindow.open(map, this);
     });
   }
   
   // loop through nightlife and add markers to the map
   for (var i = 0; i < nightlife.length; i++) {
     var night = nightlife[i];
     var marker = new google.maps.Marker({
       position: new google.maps.LatLng(night.lat, night.lng),
       map: map,
       icon: "https://maps.google.com/mapfiles/ms/icons/bar.png", 
       title: night.name,
     });
         marker.addListener('click', function() {
       var infowindow = new google.maps.InfoWindow({
         content: this.getTitle()
       });
       infowindow.open(map, this);
     });
   }
}
</script>
 
